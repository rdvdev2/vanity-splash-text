package com.rdvdev2.vanity_splash_text;

import org.quiltmc.config.api.Config;
import org.quiltmc.config.api.annotations.Comment;
import org.quiltmc.config.api.values.TrackedValue;
import org.quiltmc.config.api.values.ValueList;
import org.quiltmc.loader.api.config.QuiltConfig;

public class ModConfig {
	private static final String IGNORE_MODID_REGEXS = "ignore_modid_regexs";
	private static final String SPLASH_TEMPLATES = "splash_templates";
	private static final String SKIP_SEASONAL_SPLASH_TEXT = "skip_seasonal_splash_text";
	private static final String THE_ANSWER = "the_answer";
	private static final String KEEP_OLD_SPLASHES = "keep_old_splashes";

	public final TrackedValue<ValueList<String>> ignore_modid_regexs = TrackedValue.create(ValueList.create("",
			"java",
			"minecraft",
			"quilt_.*",
			"quilted_fabric_.*",
			".*api.*"
		), IGNORE_MODID_REGEXS, c -> {
		c.metadata(Comment.TYPE, comment -> comment.add("All the mods with an id matching any of the regular expressions in this list will be excluded from the generated splash texts"));
	});
	public final TrackedValue<ValueList<String>> splash_templates = TrackedValue.create(ValueList.create("",
			"Now featuring @@MOD@@!",
			"With @@MOD@@ version @@VERSION@@!",
			"@@MOD@@???? Cool!",
			"Can't play without @@MOD@@!",
			"Who's at version @@VERSION@@? That's right, @@MOD@@!",
			"Have you played with @@MOD@@ before?",
			"@@MOD@@ is @@MOD@@",
			"If you like @@MOD@@, its authors will love to hear about it!"
		), SPLASH_TEMPLATES, c -> {
		c.metadata(Comment.TYPE, comment -> comment.add("The mod uses these templates to generate the splash texts. Some patterns it replaces:"));
		c.metadata(Comment.TYPE, comment -> comment.add("@@MOD@@ will be replaced with a mod's name"));
		c.metadata(Comment.TYPE, comment -> comment.add("@@VERSION@@ will be replaced with a mod's version"));
		c.metadata(Comment.TYPE, comment -> comment.add("If various replace patterns are used in a template, they will refer to the same mod"));
	});
	public final TrackedValue<Boolean> skip_seasonal_splash_text = TrackedValue.create(false, SKIP_SEASONAL_SPLASH_TEXT, c -> {
		c.metadata(Comment.TYPE, comment -> comment.add("Set this option to false to enable seasonal splash texts (for Christmas, New Year's, and Halloween)"));
	});
	public final TrackedValue<Integer> the_answer = TrackedValue.create(0, THE_ANSWER, c -> {
		c.metadata(Comment.TYPE, comment -> comment.add("The special \"PLAYER IS YOU\" splash text will be enabled if this value is set to 24"));
	});
	public final TrackedValue<Boolean> keep_old_splashes = TrackedValue.create(false, KEEP_OLD_SPLASHES, c -> {
		c.metadata(Comment.TYPE, comment -> comment.add("If you want to see the original splash texts alongside the ones generated by the mod, set this option to true"));
	});

	public ModConfig() {
		QuiltConfig.create("vanity_splash_text", "config", this::creator);
	}

	private void creator(Config.Builder builder) {
		builder
				.field(ignore_modid_regexs)
				.field(splash_templates)
				.field(skip_seasonal_splash_text)
				.field(the_answer)
				.field(keep_old_splashes);
	}
}
